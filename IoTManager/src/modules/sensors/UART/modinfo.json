{
    "menuSection": "sensors",
    "configItem": [
        {
            "name": "UART",
            "type": "Reading",
            "subtype": "UART",
            "page": "",
            "descr": "",
            "widget": "nil",
            "id": "u",
            "tx": 4,
            "rx": 5,
            "line": 2,
            "speed": 9600,
            "eventFormat": 0
        }
    ],
    "about": {
        "authorName": "Dmitry Borisenko",
        "authorContact": "https://t.me/Dmitry_Borisenko",
        "authorGit": "https://github.com/DmitryBorisenko33",
        "specialThanks": "Serghei Crasnicov @Serghei63",
        "moduleName": "UART",
        "moduleVersion": "1.0",
        "usedRam": {
            "esp32_4mb": 15,
            "esp8266_4mb": 15
        },
        "subTypes": [
            "SoftUART"
        ],
        "title": "Software uart для esp8266 или hardware uart для esp32",
        "moduleDesc": "Используется вместе с Pzem004t или с другими работающими по uart сенсорами. Пригоден для обмена данными с другими контроллерами в ручном режиме или с автоматической трансляцией событий как по сети.",
        "propInfo": {
            "tx": "TX пин",
            "rx": "RX пин",
            "speed": "Скорость UART",
            "line": "Актуально только для ESP32: номер линии hardUART. =2 rx=16 tx=17",
            "eventFormat": "Выбор формата обмена сообщениями с другими контроллерами. =0 - не указан формат, значит не следим за событиями, =1 - формат событий IoTM с использованием json, =2 - формат событий для Nextion отправка событий: ID.val=Value0xFF0xFF0xFF прием ордеров: ID=Value. Отправляться будут события тех элементов, которые имеют суффикс в ИД _val или _txt, которые влияют на передаваемый формат."
        },
        "retInfo": "Содержит полученное последнее по UART сообщение.",
        "funcInfo": [
            {
                "name": "println",
                "descr": "Отправить в UART строку текста и признак завершения строки (перевод строки).",
                "params": [
                    "Строка текста"
                ]
            },
            {
                "name": "print",
                "descr": "Отправить в UART строку текста.",
                "params": [
                    "Строка текста"
                ]
            },
            {
                "name": "printHex",
                "descr": "Отправить в UART HEX-строку.",
                "params": [
                    "HEX-строка."
                ]
            },
            {
                "name": "printFFF",
                "descr": "Отправить в UART текстовую строку и hex метку 3 байта 0xFF0xFF0xFF.",
                "params": [
                    "Строка текста",
                    "1 - обернуть строку в кавычки, 0 - отправить без кавычек"
                ]
            }
        ]
    },
    "defActive": true,
    "usedLibs": {
        "esp32_4mb": [
            "plerup/EspSoftwareSerial"
        ],
        "esp32s2_4mb": [
            "plerup/EspSoftwareSerial"
        ],
        "esp32_4mb3f": [
            "plerup/EspSoftwareSerial"
        ],
        "esp32cam_4mb": [
            "plerup/EspSoftwareSerial"
        ],
        "esp8266_4mb": [
            "plerup/EspSoftwareSerial"
        ],
        "esp8266_1mb": [
            "plerup/EspSoftwareSerial"
        ],
        "esp8266_1mb_ota": [
            "plerup/EspSoftwareSerial"
        ],
        "esp8266_2mb": [
            "plerup/EspSoftwareSerial"
        ],
        "esp8266_2mb_ota": [
            "plerup/EspSoftwareSerial"
        ],
        "esp8285_1mb": [
            "plerup/EspSoftwareSerial"
        ],
        "esp8285_1mb_ota": [
            "plerup/EspSoftwareSerial"
        ]
    }
}